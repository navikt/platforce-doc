{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#test","title":"Test","text":"<p>Dette er ein test.</p>"},{"location":"project-readme/","title":"Welcome to the Platforce documentation","text":"<p>Platforce Documentation for Developers in NAV on the Salesforce Platform</p>"},{"location":"project-readme/#local-development","title":"Local development","text":""},{"location":"project-readme/#prerequisites","title":"Prerequisites","text":"<p>Please note the following requirements to be able to run below steps for local development.</p> <ul> <li>Python 3.11 or later - Download Python.</li> </ul>"},{"location":"project-readme/#on-macos","title":"on macOS","text":"<ul> <li>Homebrew</li> </ul>"},{"location":"project-readme/#on-windows","title":"on Windows","text":"<ul> <li>Scoop</li> </ul>"},{"location":"project-readme/#1-install-pipx","title":"1. Install pipx","text":""},{"location":"project-readme/#on-macos_1","title":"On macOS","text":"Bash<pre><code>brew install pipx\npipx ensurepath\n</code></pre>"},{"location":"project-readme/#on-linux","title":"On Linux","text":"Bash<pre><code>sudo apt update\nsudo apt install pipx\npipx ensurepath\n</code></pre>"},{"location":"project-readme/#on-windows_1","title":"On Windows","text":"Bash<pre><code>scoop install pipx\npipx ensurepath\n</code></pre>"},{"location":"project-readme/#2-install-poetry","title":"2. Install Poetry","text":"Bash<pre><code>pipx install poetry\n</code></pre>"},{"location":"project-readme/#2-install-dependencies","title":"2. Install dependencies","text":"Bash<pre><code>make install\n</code></pre>"},{"location":"project-readme/#3-serve-the-documentation-locally","title":"3. Serve the documentation locally","text":"Bash<pre><code>make local\n</code></pre>"},{"location":"project-readme/#4-all","title":"4. All","text":"<p>One command to do step 2 and 3; Install dependencies and serve the documentation locally.</p> Bash<pre><code>make all\n</code></pre>"},{"location":"project-readme/#utility-commands","title":"Utility commands","text":"<p>The following commando will copy the project README.md file to the docs folder as project-readme.me to include  it in the documentation.</p> <p>This is also rune as part of the <code>make local</code> command.</p> Bash<pre><code>make copyreadme\n</code></pre>"},{"location":"project-readme/#useful-links-and-resources","title":"Useful links and resources","text":"<p>Here you will fins a list of useful links and resources that are used to create this documentation project.</p>"},{"location":"project-readme/#documentation-tools","title":"Documentation tools","text":"<ul> <li>MkDocs</li> <li>Material for MkDocs</li> <li>PyMdown Extensions</li> <li>Pygments</li> <li>mkdocs-git-revision-date-localized-plugin</li> <li>MkDocs Awesome Pages Plugin</li> </ul>"},{"location":"project-readme/#project-and-build-tools","title":"Project and Build tools","text":"<ul> <li>GNU Make (Makefile)</li> <li>Makefile Tutorial</li> <li>Python</li> <li>Poetry</li> <li>pipx</li> </ul>"},{"location":"Reference/naming-convention/","title":"Naming Conventions","text":"<p>Naming Conventions for Customization and Configuration in Salesforce is an important consideration when creating custom modifications and applications on the platform.</p> <ol> <li>Descriptive and Specific Names: When naming custom objects, fields, or other components, choose descriptive and specific names. Avoid overly general terms like \u201cProductLine,\u201d which may have different meanings depending on context.</li> <li>Business Alignment: Opt for names that align with our organization\u2019s terminology. For example, use \u201cIncomeSupportProgram\u201d instead of generic terms to ensure consistency with business processes.</li> </ol> <p>Remember, adhering to these naming conventions enhances readability and facilitates efficient management of our Salesforce environment.</p>"},{"location":"Reference/naming-convention/#1-language","title":"1. Language","text":"<p>Configurable metadata (such as Custom Objects, Custom Fields, Process Builder, Flows, Apex, etc.) is created and named in the English language. This applies to both labels, API names, and help text. For metadata where labels are visible to the user, these must be translated to Norwegian using the Translation Workbench. There are two main reasons for this approach:</p> <ol> <li>We want to adhere to English names at the database and backend level. This enhances the flow and readability of code, especially since English is already extensively used in standard functions and external libraries.</li> <li>External interfaces will face requirements to support multiple languages. By introducing translation functionality via the Translation Workbench at an early stage, adaptations are ready to be translated into multiple languages as needed.</li> </ol> <p>Remember that maintaining consistent naming conventions across different languages is crucial for clarity and maintainability in software development.</p>"},{"location":"Reference/naming-convention/#2-casing-styles","title":"2. Casing Styles","text":"<p>When it comes to naming conventions, various casing styles exist. Let's explore the differences between them:</p>"},{"location":"Reference/naming-convention/#snake-case","title":"Snake Case","text":"<ul> <li>In snake case, words are separated by underscores (<code>_</code>).</li> <li>All letters are in lowercase.</li> <li> <p>Examples:</p> <ul> <li><code>number_of_users = 34</code></li> <li><code>hello_phrase = \"Hello World\"</code></li> </ul> </li> </ul>"},{"location":"Reference/naming-convention/#screaming-snake-case","title":"Screaming Snake Case","text":"<ul> <li>This variant of snake case uses all uppercase letters.</li> <li>Also known as the \"screaming snake case.\"</li> <li> <p>Examples:</p> <ul> <li><code>NUMBER_OF_USERS = 34</code></li> <li><code>HELLO_PHRASE = \"Hello World\"</code></li> </ul> </li> </ul>"},{"location":"Reference/naming-convention/#kebab-case","title":"Kebab Case","text":"<ul> <li>Similar to snake case, but words are separated by dashes (<code>-</code>).</li> <li>All words are lowercase.</li> <li>Kebab case is a human-readable way to combine multiple words into a single identifier.</li> <li> <p>Examples:</p> <ul> <li><code>number-of-users = 34</code></li> <li><code>hello-phrase = \"Hello World\"</code></li> </ul> </li> </ul>"},{"location":"Reference/naming-convention/#camel-case","title":"Camel Case","text":"<ul> <li>In camel case, the first word starts with a lowercase letter.</li> <li>Each subsequent word begins with an uppercase letter.</li> <li> <p>Examples:</p> <ul> <li><code>numberOfUsers = 34</code></li> <li><code>helloPhrase = \"Hello World\"</code></li> </ul> </li> </ul>"},{"location":"Reference/naming-convention/#pascal-case","title":"Pascal Case","text":"<ul> <li>Similar to camel case, but the first letter of the first word is also capitalized.</li> <li>Every word starts with an uppercase letter.</li> <li> <p>Examples:</p> <ul> <li><code>NumberOfUsers = 34</code></li> <li><code>HelloPhrase = \"Hello World\"</code></li> </ul> </li> </ul> <p>Choose the appropriate casing style based on your programming language and coding conventions! \ud83d\ude80</p>"},{"location":"Reference/naming-convention/#3-custom-objects","title":"3. Custom Objects","text":""},{"location":"Reference/naming-convention/#rules-for-naming","title":"Rules for Naming","text":"<ul> <li>Object Label: Singular, Pascal Case</li> <li>Object Plural Label: Plural, Pascal Case</li> <li>Object Name (API Name): Singular, Pascal Case (without underscores beyond the mandatory \u201c__c\u201d)</li> </ul> <p>When naming custom objects within Salesforce, adhere to the following rules to ensure clarity and consistency:</p> <ol> <li> <p>Uniqueness: Custom object names must be unique across your organization. Begin each name with an uppercase letter.</p> </li> <li> <p>Descriptive and Whole Words: Use descriptive and whole words for object names. Avoid excessive use of acronyms and abbreviations.</p> </li> <li> <p>Singular Form: Choose singular names (e.g., \"Review\" instead of \"Reviews,\" or \"OrderItem\" instead of \"Order Items\").</p> </li> <li> <p>No Underscores: Avoid including underscores (\"_\") in object names.</p> </li> <li> <p>Consistent Object Label: Whenever possible, align the object label with the object name. Consistency between the label and name ensures ease of navigation within Salesforce and finding the object in the various setup UIs.</p> </li> <li> <p>English Language Naming: All naming conventions should be in English.</p> </li> <li> <p>Norwegian Translation: When translating labels and user-facing text to Norwegian, adhere to our organization\u2019s specific terminology. (Tip: Utilize Salesforce\u2019s Translation Workbench for translating labels and user-facing text to Norwegian.)</p> </li> </ol> <p>Remember, well-defined naming conventions contribute to a streamlined and efficient Salesforce configuration.</p>"},{"location":"Reference/naming-convention/#prefixing","title":"Prefixing","text":"<p>As a general rule, avoid adding team names, application acronyms to object names. Instead use the description field to add team or application ownership to the object. (Another and better solution will be made for handling this later.)</p>"},{"location":"Reference/naming-convention/#exceptions","title":"Exceptions","text":"<p>When naming custom objects within Salesforce, consider the following exceptions to enhance clarity and maintain consistency:</p> <ol> <li> <p>Acronyms and Abbreviations: Widely used and commonly understood acronyms and abbreviations can replace the long form. For instance, \"HTTP,\" \"URL,\" or \"NAV\" are acceptable.</p> </li> <li> <p>Underscores for Application Prefix: Adding an underscore is acceptable when prefixing the object name to denote its association with an application. For example:</p> </li> <li>Correct: OrderApplication_Order</li> <li>Correct: OrderApplication_OrderItem</li> <li>Note: OrderItem does not have any underscores.</li> </ol> <p>Remember, adhering to these exceptions ensures a balance between readability and precision in your naming conventions.</p>"},{"location":"Reference/naming-convention/#demonstrative-example","title":"Demonstrative Example","text":"<p>The following are examples of custom object naming that should not be used </p> Object Name (API) Reason <code>CustAsset</code> Abbreviations have made this object name hard to understand <code>Orders</code> Object names should always be singular. <code>Order_Item</code> Object names should not have underscores. <p>The following are examples of the naming convention that will be used:</p> Object Name (API) Reason <code>CustomerAsset</code> Removing ambiguity from the name will improve readability and maintainability <code>Order</code> Making object names singular will ensure a standard naming convention across all objects. <code>OrderItem</code> Removing all underscores will help keep a standard naming convention as many times there are words that some may separate into two words and other may not. For example: <code>Zipcode</code> vs. <code>Zip Code</code>. <p>The following are examples shows valid naming conventions for Object Label, Object Plural Label and Object Name (API):</p> Object Label Object Plural Label Object Name (API) Shipping Invoice Shipping Invoices <code>ShippingInvoice__c</code> Inclusion Opportunity Inclusion Opportunities <code>InclusionOpportunity__c</code>"},{"location":"how-to-guides/dev-environment/install-git/","title":"Install Git","text":"<p>How to install Git on your computer.</p>"},{"location":"how-to-guides/dev-environment/install-git/#prerequisites","title":"Prerequisites","text":"WindowsmacOS <ul> <li>Scoop</li> </ul> <ul> <li>Homebrew</li> </ul>"},{"location":"how-to-guides/dev-environment/install-git/#installation","title":"Installation","text":"WindowsmacOS PowerShell<pre><code>scoop install git\n</code></pre> Bash<pre><code>brew install git\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-git/#resources","title":"Resources","text":"<ul> <li>Git</li> </ul>"},{"location":"how-to-guides/dev-environment/install-homebrew/","title":"Install Homebrew","text":"<p>How to install Homebrew on your macOS computer.</p>"},{"location":"how-to-guides/dev-environment/install-homebrew/#prerequisites","title":"Prerequisites","text":"<p>No prerequisite needed.</p>"},{"location":"how-to-guides/dev-environment/install-homebrew/#installation","title":"Installation","text":"Bash<pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-homebrew/#resources","title":"Resources","text":"<ul> <li>Homebrew</li> </ul>"},{"location":"how-to-guides/dev-environment/install-java/","title":"Install Java","text":"<p>How to install Java on your computer.</p>"},{"location":"how-to-guides/dev-environment/install-java/#prerequisites","title":"Prerequisites","text":"WindowsmacOS <ul> <li>Scoop</li> </ul> <ul> <li>Homebrew</li> </ul>"},{"location":"how-to-guides/dev-environment/install-java/#installation","title":"Installation","text":"WindowsmacOS PowerShell<pre><code>scoop bucket add java\nscoop install temurin17-jdk\n</code></pre> Bash<pre><code>brew tap homebrew/cask-versions\nbrew install --cask temurin17\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-java/#resources","title":"Resources","text":"<ul> <li>Adoptium</li> </ul>"},{"location":"how-to-guides/dev-environment/install-nodejs/","title":"Install NodeJS","text":"<p>How to install NodeJS on your computer.</p>"},{"location":"how-to-guides/dev-environment/install-nodejs/#prerequisites","title":"Prerequisites","text":"WindowsmacOS <ul> <li>Scoop</li> </ul> <ul> <li>Homebrew</li> </ul>"},{"location":"how-to-guides/dev-environment/install-nodejs/#installation","title":"Installation","text":"WindowsmacOS PowerShell<pre><code>scoop install scoop install nodejs-lts\n</code></pre> Bash<pre><code>brew install node\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-nodejs/#advanced-installation","title":"Advanced Installation","text":""},{"location":"how-to-guides/dev-environment/install-nodejs/#additional-prerequisites","title":"Additional Prerequisites","text":"macOS <ul> <li>Node Version Manager (NVM)</li> </ul>"},{"location":"how-to-guides/dev-environment/install-nodejs/#steps","title":"Steps","text":"macOS Bash<pre><code>nvm install --lts\nnvm use --lts\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-nodejs/#resources","title":"Resources","text":"<ul> <li>NodeJS</li> </ul>"},{"location":"how-to-guides/dev-environment/install-nvm/","title":"Install NVM","text":"<p>How to install Node Version Manager on your macOS computer.</p>"},{"location":"how-to-guides/dev-environment/install-nvm/#prerequisites","title":"Prerequisites","text":"<p>No prerequisite needed.</p>"},{"location":"how-to-guides/dev-environment/install-nvm/#installation","title":"Installation","text":"Bash<pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-nvm/#resources","title":"Resources","text":"<ul> <li>Node Version Manager</li> </ul>"},{"location":"how-to-guides/dev-environment/install-salesforce-cli/","title":"Install Salesforce CLI","text":"<p>How to install Salesforce CLI on your computer.</p>"},{"location":"how-to-guides/dev-environment/install-salesforce-cli/#prerequisites","title":"Prerequisites","text":"WindowsmacOS <ul> <li>Scoop</li> <li>Java</li> <li>NodeJS</li> </ul> <ul> <li>Homebrew</li> <li>Java</li> <li>NodeJS</li> </ul>"},{"location":"how-to-guides/dev-environment/install-salesforce-cli/#installation","title":"Installation","text":"WindowsmacOS PowerShell<pre><code>npm install -global @salesforce/cli\n</code></pre> Bash<pre><code>npm install -global @salesforce/cli\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-salesforce-cli/#resources","title":"Resources","text":"<ul> <li>Salesforce Developers - Install Salesforce CLI</li> </ul>"},{"location":"how-to-guides/dev-environment/install-scoop/","title":"Install Scoop","text":"<p>How to install Scoop on your Windows computer.</p>"},{"location":"how-to-guides/dev-environment/install-scoop/#prerequisites","title":"Prerequisites","text":"<p>No prerequisite needed.</p>"},{"location":"how-to-guides/dev-environment/install-scoop/#installation","title":"Installation","text":"PowerShell<pre><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\nInvoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-scoop/#resources","title":"Resources","text":"<ul> <li>Scoop</li> </ul>"},{"location":"how-to-guides/dev-environment/install-vscode/","title":"Install VS Code","text":"<p>How to install Visual Studio Code on your computer.</p>"},{"location":"how-to-guides/dev-environment/install-vscode/#prerequisites","title":"Prerequisites","text":"WindowsmacOS <ul> <li>Scoop</li> </ul> <ul> <li>Homebrew</li> </ul>"},{"location":"how-to-guides/dev-environment/install-vscode/#installation","title":"Installation","text":"WindowsmacOS PowerShell<pre><code>scoop bucket add extras\nscoop install vscode\n</code></pre> Bash<pre><code>brew install --cask visual-studio-code\n</code></pre>"},{"location":"how-to-guides/dev-environment/install-vscode/#resources","title":"Resources","text":"<ul> <li>Visual Studio Code</li> </ul>"},{"location":"team-platforce/about/","title":"About","text":"<p>Team Platforce is a Salesforce Platform Team within NAV (Norwegian Labour and Welfare Administration) under the IT Area Tjenesteplattform.</p>"},{"location":"team-platforce/contact/","title":"Contact","text":"<p>The Team Platforce can be reached on slack at the following channel: #platforce.</p> <p>You can also reach the team by creating an issue on the repository.</p>"},{"location":"team-platforce/mission-statement/","title":"Mission Statement","text":"<p>Empowering Product Teams through Salesforce Excellence At NAV, our Salesforce Platform Team is committed to enabling the success of our Product Teams and theire users. We focus on maximizing the potential of Salesforce as a strategic platform, enhancing user experience, and providing robust services. Here\u2019s our refined mission:</p> <p>1. Product Team Enablement:</p> <ul> <li>We exist to empower Product Manager, Developers, and Designers. Our goal is to provide them with a reliable, efficient, and user-friendly Salesforce environment.</li> <li>We actively collaborate with Product Teams to understand their needs, challenges, and aspirations</li> </ul> <p>2. Salesforce Services Excellence:</p> <ul> <li>We manage and optimize Salesforce core components, including core customizations, core data modeling, and core integrations.</li> <li>Our team ensures that Product Teams have the tools they need to build exceptional solutions.</li> </ul> <p>3. Developer Experience Enhancement:</p> <ul> <li>We prioritize the Developer Experience (DX). Our documentation, best practices, and guidelines are tailored to support Developers.</li> <li>Feedback from Developers is invaluable, and we continuously iterate to improve our services.</li> </ul> <p>4. Innovation and Optimization:</p> <ul> <li>We explore new Salesforce features, evaluate their impact, and recommend adoption strategies.</li> <li>Our team collaborates with Product Manager, Developers, and Designers to empower them in identifying opportunities for process automation, efficiency gains, and innovative solutions within their specific contexts.</li> </ul> <p>5. Security and Compliance Stewardship:</p> <ul> <li>We maintain a secure Salesforce environment, adhering to industry standards and organizational policies.</li> <li>Compliance is non-negotiable, and we actively address security vulnerabilities.</li> </ul> <p>6. Architectural Decisions and Platform Governance:</p> <ul> <li>We take an active role in all architectural decisions related to Salesforce.</li> <li>Our team drives the governance of the Salesforce platform, ensuring compliance with guidelines and optimal resource utilization.</li> </ul> <p>7. Continuous Learning and Growth:</p> <ul> <li>We stay informed about Salesforce updates, certifications, and industry trends.</li> <li>Our commitment to learning extends to Product Teams, fostering a culture of continuous improvement.</li> </ul>"},{"location":"team-platforce/mission-statement/#our-commitment","title":"Our Commitment","text":"<p>We are dedicated to supporting Product Teams, unlocking the full potential of Salesforce, and contributing to the overall success of NAV. Together, we create impactful solutions that drive innovation and growth. Our team collaborates with Product Managers, Developers, and Designers to empower them in identifying opportunities for process automation, efficiency gains, and innovative solutions within their specific contexts.</p>"}]}